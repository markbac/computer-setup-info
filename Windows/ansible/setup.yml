---
- name: Setup Windows Environment
  hosts: localhost
  vars:
    winget_packages:
      - topgrade
      - macchina
      - lsd
      - broot
      - dua
      - neofetch
      - powershell-core
      - dbgate
      - vlc
      - curl
      - wireshark
      - bluescreenview
      - libreoffice-fresh
      - whocrashed
      - microsoft-windows-terminal
      - git
      - vscode
      - docker-desktop
      - cascadiafonts
      - firacode
      - googlechrome
      - microsoft-edge
      - opera
      - firefox
      - 7zip
      - powertoys
      - irfanview
      - notepadplusplus
      - bulkrenameutility
      - wsl
      - rust
      - adobereader
      - gimp
      - paint.net
      - sysinternals
      - zoom
      - microsoft-teams
      - drawio
      - python
      - googledrive
      - foxitreader
      - ccleaner
      - treesizefree
      - windirstat
      - winscp
      - dotnet
      - oh-my-posh
      - winmerge
      - tortoisegit
      - putty
      - graphviz
      - llvm
      - googleearth
      - whatsapp
      - openvpn
      - onenote
      - vnc-viewer
      - obs-studio
      - cppcheck
      - gh
      - miktex
      - xnview
      - speccy
      - nano
      - plantuml
      - hwmonitor
      - nodejs
      - nvm
      - bottom
      - gitui
      - bat
      - mdcat
      - alacritty
      - tokei
      - delta
      - onefetch
      - steam
      - epicgames
      - Microsoft.VisualStudio.2022.Community
      - teams
      - procs
      - trippy

    scoop_packages:
      - synology-note-station-client
      - synologydrive
      - sonos-controller

    choco_packages:
      - irfanviewplugins
      - microsoft-teams-new-bootstrapper
      - sourcemonitor

  tasks:

    - name: Ensure Scoop is installed
      win_shell: |
        scoop --version >$null 2>&1
        if ($LASTEXITCODE -ne 0) {
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          iex (New-Object Net.WebClient).DownloadString('https://get.scoop.sh')
        }
      register: scoop_installed

    - name: Install Scoop packages
      win_shell: |
        foreach ($pkg in {{ scoop_packages }}) { scoop install $pkg }
      when: scoop_installed.changed

    - name: Ensure Chocolatey is installed
      become: yes
      win_shell: |
        choco --version >$null 2>&1
        if ($LASTEXITCODE -ne 0) {
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
      register: choco_installed

    - name: Install Chocolatey packages
      become: yes
      win_shell: |
        choco upgrade -y chocolatey
        foreach ($pkg in {{ choco_packages }}) { choco install -y $pkg }
      when: choco_installed.changed

    - name: Install Winget packages
      become: yes
      win_shell: |
        foreach ($pkg in {{ winget_packages }}) { winget install $pkg }
