- name: Setup Development Environment
  hosts: localhost
  become: yes

  vars:
    apt_packages:
      - nano
      - build-essential
      - procps
      - curl
      - file
      - cmake
      - git
      - python3
      - python3-setuptools
      - python3-pip
      - dotnet-sdk-6.0
      - pkg-config
      - inetutils-traceroute
      - net-tools
      - wireless-tools
      - graphviz
      - libgraphviz-dev
      - x11-apps
      - libxcb1-dev
      - libxcb-render0-dev
      - libxcb-shape0-dev
      - libxcb-xfixes0-dev
      - libdbus-glib-1-2
      - libncurses5-dev
      - libfreetype6-dev
      - libfontconfig1-dev
      - libxkbcommon-dev
      - mate-terminal
      - vnstat
      - vnstati
      - neofetch
      - wget
      - htop
      - bat
      - tree
      - nmon
      - atop
      - nodejs
      - gpg
      - inxi
      - unzip
      - screenfetch
      - httrack
      - fd-find
      - wkhtmltopdf
      - default-jre
      - exa
      - debian-goodies
      - apt-transport-https
      - ca-certificates
      - gnupg
      - snapd
      - libssl-dev
      - flatpak
      - python3-tk
      - psmisc
      - bpytop
      - software-properties-common
      - cmatrix
      - cowsay
      - sl
      - figlet
      - libaa-bin
      - lolcat
      - aewan
      - jp2a
      - cbonsai
      - most
      - aview
      - mc
      - chafa
      - ncdu
      - stacer
      - zsh
      - slurm
      - bmon
      - tcptrack
      - speedometer
      - cpu-x
      - lshw
      - hardinfo
      - plantuml
      - lsd
    pip_packages:
      - wheel
      - erd-from-json-table-schema
      - pdfkit
      - pywebcopy
      - diagrams
      - pdfminer.six
      - 'pdfminer.six[image]'
      - adr-tools-python
      - adr-viewer
      - pyadr
      - pymypdf
      - aafigure
      - httpie
      - markdown
      - mdbook-pdf-outline
    rust_packages:
      - mdbook
      - mdbook-pdf
      - mdbook-plantuml
      - mdbook-codeblocks
      - mdbook-mermaid
      - lfs
      - cargo-update
      - rust-kanban
      - kanorg
      - rink
      - xplr
    vscode_extensions:
      - 42Crunch.vscode-openapi
      - aaron-bond.better-comments
      - 4ops.terraform
      - alefragnani.project-manager
      - anweber.httpbook
      - asyncapi.asyncapi-preview
      - bierner.markdown-mermaid
      - DavidAnson.vscode-markdownlint
      - eamodio.gitlens
      - esbenp.prettier-vscode

  tasks:

    - name: Update and upgrade APT packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install APT packages
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ apt_packages }}"

    - name: Install Python packages using pip
      pip:
        name: "{{ item }}"
      loop: "{{ pip_packages }}"

    - name: Install Rust
      shell: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env
      args:
        executable: /bin/bash

    - name: Install Rust packages
      shell: "cargo install {{ item }}"
      loop: "{{ rust_packages }}"
      environment:
        PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}"

    - name: Configure Git and SSH
      shell: |
        ssh-keygen -t ed25519 -C "mark@bacon.me.uk" -f ~/.ssh/id_ed25519 -N ""
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519
        git config --global user.name "Mark Bacon"
        git config --global user.email "mark@bacon.me.uk"

    - name: Install VSCode
      shell: |
        wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
        sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
        echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | sudo tee /etc/apt/sources.list.d/vscode.list
        sudo apt update
        sudo apt install code -y
      args:
        executable: /bin/bash

    - name: Install VSCode extensions
      shell: "code --install-extension {{ item }}"
      loop: "{{ vscode_extensions }}"

    - name: Install Nerd Fonts
      shell: |
        mkdir -p ~/.local/share/fonts
        wget "https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip"
        wget "https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/RobotoMono.zip"
        unzip Meslo.zip -d ~/.local/share/fonts
        unzip RobotoMono.zip -d ~/.local/share/fonts
        rm Meslo.zip RobotoMono.zip
        fc-cache -f
      args:
        executable: /bin/bash

    - name: Final setup for bashrc and zshrc
      block:
        - name: Update .bashrc
          lineinfile:
            path: "~/.bashrc"
            line: "{{ item }}"
            create: yes
          loop:
            - 'export PATH="$PATH:$HOME/.local/bin"'
            - 'export PAGER="most"'

        - name: Update .zshrc
          lineinfile:
            path: "~/.zshrc"
            line: "{{ item }}"
            create: yes
          loop:
            - 'export PATH="$PATH:$HOME/.local/bin"'
            - 'export PAGER="most"'

    - name: Notify reboot
      debug:
        msg: "Setup complete! Please reboot your system."
